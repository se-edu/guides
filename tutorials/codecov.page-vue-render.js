
    const renderFn = new Function("const { createElementVNode: _createElementVNode, createTextVNode: _createTextVNode, resolveComponent: _resolveComponent, createVNode: _createVNode, withCtx: _withCtx, Fragment: _Fragment, openBlock: _openBlock, createElementBlock: _createElementBlock } = Vue\n\nconst _hoisted_1 = { sticky: \"\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://se-education.org\",\n  title: \"SE-EDU\",\n  class: \"navbar-brand\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"span\", null, [\n    /*#__PURE__*/_createElementVNode(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: \"fas fa-chevron-circle-left\"\n    }),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"strong\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"SE-EDU\")\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/guides/index.html\",\n    class: \"nav-link\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"span\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Home\")\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/guides/about.html\",\n    class: \"nav-link\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"span\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"About\")\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://github.com/se-edu/guides\",\n    class: \"nav-link\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"span\", null, [\n      /*#__PURE__*/_createElementVNode(\"span\", {\n        \"aria-hidden\": \"true\",\n        class: \"fab fa-github\"\n      })\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_6 = { class: \"nav-link\" }\nconst _hoisted_7 = { class: \"navbar-form\" }\nconst _hoisted_8 = { id: \"flex-body\" }\nconst _hoisted_9 = {\n  id: \"content-wrapper\",\n  class: \"fixed-header-padding\"\n}\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h1\", { id: \"guides-for-se-student-projects\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"text-dark\" }, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Guides for SE student projects Â»\")\n    ])\n  ]),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"fa fa-anchor\",\n    href: \"#guides-for-se-student-projects\",\n    onclick: \"event.stopPropagation()\"\n  })\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h1\", { id: \"using-codecov\" }, [\n  /*#__PURE__*/_createTextVNode(\"Using Codecov\"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"fa fa-anchor\",\n    href: \"#using-codecov\",\n    onclick: \"event.stopPropagation()\"\n  })\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"lead\" }, [\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, [\n      /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://about.codecov.io/\" }, \"Codecov\"),\n      /*#__PURE__*/_createTextVNode(\" is an online service for generating test coverage reports.\")\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"h2\", { id: \"setting-up-codecov-with-github-actions\" }, [\n  /*#__PURE__*/_createTextVNode(\"Setting up Codecov with GitHub actions\"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"fa fa-anchor\",\n    href: \"#setting-up-codecov-with-github-actions\",\n    onclick: \"event.stopPropagation()\"\n  })\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Scenario: You have forked a project that already had support for using Codecov in the GitHub Actions CI pipeline. Now you want to set up your fork to work with Codecov as well.\", -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Given below are the steps for achieving the above, recommended to be done by someone who has admin access to the GitHub organization that contains the fork.\", -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://app.codecov.io/signup/\" }, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Sign up for a Codecov account\")\n  ]),\n  /*#__PURE__*/_createTextVNode(\" using your GitHub account.\")\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Install the Codecov integration on GitHub:\", -1 /* HOISTED */)\nconst _hoisted_18 = { style: {\"list-style-type\":\"none\",\"padding-inline-start\":\"0px\"} }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"li\", {\n  texts: \"['a)', 'b)', 'c)', 'd)', 'e)', 'f)', 'g)', 'h)']\",\n  style: {\"display\":\"flex\"}\n}, [\n  /*#__PURE__*/_createElementVNode(\"span\", {\n    \"aria-hidden\": \"true\",\n    style: {\"line-height\":\"unset\",\"margin-inline-end\":\"0.35em\",\"align-self\":\"flex-start\",\"flex-shrink\":\"0\"}\n  }, \"a)\"),\n  /*#__PURE__*/_createElementVNode(\"div\", null, [\n    /*#__PURE__*/_createTextVNode(\"Go to \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/apps/codecov\" }, \"this page\"),\n    /*#__PURE__*/_createTextVNode(\" and click on the green \"),\n    /*#__PURE__*/_createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-sm\"\n    }, \"Install\"),\n    /*#__PURE__*/_createTextVNode(\" button.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"li\", { style: {\"display\":\"flex\"} }, [\n  /*#__PURE__*/_createElementVNode(\"span\", {\n    \"aria-hidden\": \"true\",\n    style: {\"line-height\":\"unset\",\"margin-inline-end\":\"0.35em\",\"align-self\":\"flex-start\",\"flex-shrink\":\"0\"}\n  }, \"b)\"),\n  /*#__PURE__*/_createElementVNode(\"div\", null, \"In the next page, select your GitHub organization\")\n], -1 /* HOISTED */)\nconst _hoisted_21 = { style: {\"display\":\"flex\"} }\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"span\", {\n  \"aria-hidden\": \"true\",\n  style: {\"line-height\":\"unset\",\"margin-inline-end\":\"0.35em\",\"align-self\":\"flex-start\",\"flex-shrink\":\"0\"}\n}, \"c)\", -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Only select repositories\", -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"All repositories\", -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-success btn-sm\"\n}, \"Install\", -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */)\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Sync your repo list in Codecov:\"),\n  /*#__PURE__*/_createTextVNode(\" Login to \"),\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://app.codecov.io\" }, \"Codecov\"),\n  /*#__PURE__*/_createTextVNode(\" using your GitHub account. Ensure your organization is listed in the dropdown in the home page. If not, use the \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"re-syncing\"),\n  /*#__PURE__*/_createTextVNode(\" link to sync Codecov data with GitHub (and refresh the page afterward).\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(\"\\nIf the organization still fails to show up in the dropdown, proceed to the next step anyway (it's likely the syncing is done but the UI is not showing it).\")\n], -1 /* HOISTED */)\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Configure Codecov for the specific fork:\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ul\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createTextVNode(\"Go to \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"https://app.codecov.io/gh/{YOUR_ORG}\"),\n      /*#__PURE__*/_createTextVNode(\" (e.g., \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"https://app.codecov.io/gh/my-team-org\"),\n      /*#__PURE__*/_createTextVNode(\").\")\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createTextVNode(\"Click the \"),\n      /*#__PURE__*/_createElementVNode(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary btn-sm\"\n      }, \"Configure\"),\n      /*#__PURE__*/_createTextVNode(\" option for your fork, and follow the instructions for GitHub Actions.\\n\"),\n      /*#__PURE__*/_createElementVNode(\"ul\", { style: {\"list-style-type\":\"none\",\"padding-inline-start\":\"0px\"} }, [\n        /*#__PURE__*/_createElementVNode(\"li\", {\n          texts: \"['a)', 'b)', 'c)', 'd)', 'e)', 'f)', 'g)', 'h)']\",\n          style: {\"display\":\"flex\"}\n        }, [\n          /*#__PURE__*/_createElementVNode(\"span\", {\n            \"aria-hidden\": \"true\",\n            style: {\"line-height\":\"unset\",\"margin-inline-end\":\"0.35em\",\"align-self\":\"flex-start\",\"flex-shrink\":\"0\"}\n          }, \"a)\"),\n          /*#__PURE__*/_createElementVNode(\"div\", null, [\n            /*#__PURE__*/_createTextVNode(\"You can skip the \"),\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Step 1: Output a Coverage report file in your CI\"),\n            /*#__PURE__*/_createTextVNode(\", as it is already set up in your repo.\")\n          ])\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", { style: {\"display\":\"flex\"} }, [\n          /*#__PURE__*/_createElementVNode(\"span\", {\n            \"aria-hidden\": \"true\",\n            style: {\"line-height\":\"unset\",\"margin-inline-end\":\"0.35em\",\"align-self\":\"flex-start\",\"flex-shrink\":\"0\"}\n          }, \"b)\"),\n          /*#__PURE__*/_createElementVNode(\"div\", null, [\n            /*#__PURE__*/_createTextVNode(\"But you still need to do \"),\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Step 2: Select an upload token to add as a secret on GitHub\"),\n            /*#__PURE__*/_createTextVNode(\". In that step, choose the \"),\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Repository Token\"),\n            /*#__PURE__*/_createTextVNode(\" option\")\n          ])\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", { style: {\"display\":\"flex\"} }, [\n          /*#__PURE__*/_createElementVNode(\"span\", {\n            \"aria-hidden\": \"true\",\n            style: {\"line-height\":\"unset\",\"margin-inline-end\":\"0.35em\",\"align-self\":\"flex-start\",\"flex-shrink\":\"0\"}\n          }, \"c)\"),\n          /*#__PURE__*/_createElementVNode(\"div\", null, [\n            /*#__PURE__*/_createTextVNode(\"Proceed to \"),\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Step 3: add token as repository secret\"),\n            /*#__PURE__*/_createTextVNode(\", and configure the \"),\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"CODECOV_TOKEN\"),\n            /*#__PURE__*/_createTextVNode(\" secret as instructed there.\")\n          ])\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", { style: {\"display\":\"flex\"} }, [\n          /*#__PURE__*/_createElementVNode(\"span\", {\n            \"aria-hidden\": \"true\",\n            style: {\"line-height\":\"unset\",\"margin-inline-end\":\"0.35em\",\"align-self\":\"flex-start\",\"flex-shrink\":\"0\"}\n          }, \"d)\"),\n          /*#__PURE__*/_createElementVNode(\"div\", null, \"You can skip steps 4 and 5.\")\n        ])\n      ])\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Check for coverage status:\", -1 /* HOISTED */)\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://app.codecov.io/gh\" }, \"your Codecov home page\", -1 /* HOISTED */)\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"mark\", null, \"click on the repo name\", -1 /* HOISTED */)\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"no data\", -1 /* HOISTED */)\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Display the Codecov badge:\"),\n  /*#__PURE__*/_createTextVNode(\" If your fork has a badge showing the Codecov status (e.g, \"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg\",\n    target: \"_self\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"img\", {\n      src: \"https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg\",\n      alt: \"codecov\",\n      class: \"img-fluid\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(\"), get the Markdown code for the Codecov badge provided in \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"https://app.codecov.io/gh/{YOUR_ORG}/{YOUR_FORK}/config/badge\"),\n  /*#__PURE__*/_createTextVNode(\" (e.g., \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"https://app.codecov.io/gh/se-edu/addressbook-level3/config/badge\"),\n  /*#__PURE__*/_createTextVNode(\") and update the appropriate page in your fork.\")\n], -1 /* HOISTED */)\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"You can control if CI still passes even if Codecov task fails\"),\n  /*#__PURE__*/_createTextVNode(\" using the line\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"fail_ci_if_error: true\"),\n  /*#__PURE__*/_createTextVNode(\" or \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"fail_ci_if_error: false\"),\n  /*#__PURE__*/_createTextVNode(\" in \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \".github/workflows/gradle.yml\"),\n  /*#__PURE__*/_createTextVNode(\", under the section related to Codecov.\")\n], -1 /* HOISTED */)\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"If there are no CI runs in your repo yet\"),\n  /*#__PURE__*/_createTextVNode(\", you can either trigger one by pushing an empty/trivial commit to the repo, or wait till there are some new commits in the repo -- setting up Codecov is not urgent, as Codecov only comes into play when you start updating functional code in the repo.\")\n], -1 /* HOISTED */)\nconst _hoisted_36 = { class: \"nav-component slim-scroll\" }\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"nav-link py-1\",\n  href: \"#using-codecov\"\n}, \"Using Codecovâ\", -1 /* HOISTED */)\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"nav\", { class: \"nav nav-pills flex-column my-0 nested no-flex-wrap\" }, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"nav-link py-1\",\n    href: \"#setting-up-codecov-with-github-actions\"\n  }, \"Setting up Codecov with GitHub actionsâ\")\n], -1 /* HOISTED */)\nconst _hoisted_39 = /*#__PURE__*/_createElementVNode(\"footer\", null, [\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"text-center\" }, [\n    /*#__PURE__*/_createElementVNode(\"small\", null, [\n      /*#__PURE__*/_createTextVNode(\"[Powered by \"),\n      /*#__PURE__*/_createElementVNode(\"img\", {\n        src: \"https://markbind.org/favicon.ico\",\n        width: \"30\"\n      }),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://markbind.org/\" }, \"MarkBind 6.0.2\"),\n      /*#__PURE__*/_createTextVNode(\" on Sat, 26 Jul 2025, 13:14:05 GMT+8]\")\n    ])\n  ])\n], -1 /* HOISTED */)\n\nreturn function render(_ctx, _cache) {\n  const _component_searchbar = _resolveComponent(\"searchbar\")\n  const _component_navbar = _resolveComponent(\"navbar\")\n  const _component_pic = _resolveComponent(\"pic\")\n  const _component_trigger = _resolveComponent(\"trigger\")\n  const _component_box = _resolveComponent(\"box\")\n  const _component_modal = _resolveComponent(\"modal\")\n  const _component_overlay_source = _resolveComponent(\"overlay-source\")\n  const _component_scroll_top_button = _resolveComponent(\"scroll-top-button\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"header\", _hoisted_1, [\n      _createVNode(_component_navbar, { type: \"dark\" }, {\n        brand: _withCtx(() => [\n          _hoisted_2\n        ]),\n        right: _withCtx(() => [\n          _createElementVNode(\"li\", _hoisted_6, [\n            _createElementVNode(\"form\", _hoisted_7, [\n              _createVNode(_component_searchbar, {\n                data: _ctx.searchData,\n                placeholder: \"Search this site\",\n                \"on-hit\": _ctx.searchCallback,\n                \"menu-align-right\": \"\"\n              }, null, 8 /* PROPS */, [\"data\", \"on-hit\"])\n            ])\n          ])\n        ]),\n        default: _withCtx(() => [\n          _createTextVNode(),\n          _hoisted_3,\n          _createTextVNode(),\n          _hoisted_4,\n          _createTextVNode(),\n          _hoisted_5,\n          _createTextVNode()\n        ]),\n        _: 1 /* STABLE */\n      })\n    ]),\n    _createTextVNode(),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"div\", _hoisted_9, [\n        _hoisted_10,\n        _createTextVNode(),\n        _createElementVNode(\"p\", null, [\n          _hoisted_11,\n          _createTextVNode(),\n          _hoisted_12,\n          _createTextVNode(),\n          _hoisted_13,\n          _createTextVNode(),\n          _hoisted_14,\n          _createTextVNode(),\n          _hoisted_15,\n          _createTextVNode(),\n          _createElementVNode(\"ol\", null, [\n            _hoisted_16,\n            _createTextVNode(),\n            _createElementVNode(\"li\", null, [\n              _hoisted_17,\n              _createTextVNode(\":\\n\"),\n              _createElementVNode(\"ul\", _hoisted_18, [\n                _hoisted_19,\n                _createTextVNode(),\n                _hoisted_20,\n                _createTextVNode(),\n                _createElementVNode(\"li\", _hoisted_21, [\n                  _hoisted_22,\n                  _createElementVNode(\"div\", null, [\n                    _createTextVNode(\"In the next page, choose the \"),\n                    _hoisted_23,\n                    _createTextVNode(\" and choose your repo (you can also use the \"),\n                    _hoisted_24,\n                    _createTextVNode(\" option instead). After that, click the \"),\n                    _hoisted_25,\n                    _createTextVNode(\".\"),\n                    _hoisted_26,\n                    _createTextVNode(),\n                    _createVNode(_component_pic, {\n                      src: \"/guides/tutorials/images/codecov/select-repo.png\",\n                      width: \"400\"\n                    })\n                  ])\n                ])\n              ])\n            ]),\n            _createTextVNode(),\n            _hoisted_27,\n            _createTextVNode(),\n            _hoisted_28,\n            _createTextVNode(),\n            _createElementVNode(\"li\", null, [\n              _hoisted_29,\n              _createTextVNode(\" Go to your repo and re-run the most recent CI run (\"),\n              _createVNode(_component_trigger, {\n                trigger: \"click\",\n                for: \"modal:codecode-noCiRuns\"\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"What to do if there are no CI runs in the repo?\")\n                ]),\n                _: 1 /* STABLE */\n              }),\n              _createTextVNode(\"). If you set up Codecov correctly, this CI run should upload the coverage data to Codecov. Go back to \"),\n              _hoisted_30,\n              _createTextVNode(\", choose the org from the dropdown and \"),\n              _hoisted_31,\n              _createTextVNode(\" (ignore the \"),\n              _hoisted_32,\n              _createTextVNode(\" label, if any). In the next page, you should see the code coverage details. Here is an example:\\n\"),\n              _createVNode(_component_pic, { src: \"/guides/tutorials/images/codecov/coverage-example.png\" })\n            ]),\n            _createTextVNode(),\n            _hoisted_33\n          ]),\n          _createTextVNode(),\n          _createVNode(_component_box, {\n            type: \"tip\",\n            seamless: \"\"\n          }, {\n            default: _withCtx(() => [\n              _hoisted_34\n            ]),\n            _: 1 /* STABLE */\n          }),\n          _createTextVNode(),\n          _createVNode(_component_modal, {\n            large: \"\",\n            id: \"modal:codecode-noCiRuns\"\n          }, {\n            header: _withCtx(() => []),\n            default: _withCtx(() => [\n              _createTextVNode(),\n              _hoisted_35\n            ]),\n            _: 1 /* STABLE */\n          })\n        ])\n      ]),\n      _createTextVNode(),\n      _createVNode(_component_overlay_source, {\n        id: \"page-nav\",\n        class: \"fixed-header-padding\",\n        \"tag-name\": \"nav\",\n        to: \"page-nav\"\n      }, {\n        default: _withCtx(() => [\n          _createElementVNode(\"div\", _hoisted_36, [\n            _createVNode(_component_overlay_source, {\n              id: \"mb-page-nav\",\n              \"tag-name\": \"nav\",\n              to: \"mb-page-nav\",\n              class: \"nav nav-pills flex-column my-0 small no-flex-wrap\"\n            }, {\n              default: _withCtx(() => [\n                _hoisted_37,\n                _createTextVNode(),\n                _hoisted_38\n              ]),\n              _: 1 /* STABLE */\n            })\n          ])\n        ]),\n        _: 1 /* STABLE */\n      }),\n      _createTextVNode(),\n      _createVNode(_component_scroll_top_button)\n    ]),\n    _createTextVNode(),\n    _hoisted_39\n  ], 64 /* STABLE_FRAGMENT */))\n}");
    var render = renderFn();
  