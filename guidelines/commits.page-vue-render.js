
    const renderFn = new Function("const { createElementVNode: _createElementVNode, createTextVNode: _createTextVNode, resolveComponent: _resolveComponent, createVNode: _createVNode, withCtx: _withCtx, createStaticVNode: _createStaticVNode, Fragment: _Fragment, openBlock: _openBlock, createElementBlock: _createElementBlock } = Vue\n\nconst _hoisted_1 = { sticky: \"\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://se-education.org\",\n  title: \"SE-EDU\",\n  class: \"navbar-brand\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"span\", null, [\n    /*#__PURE__*/_createElementVNode(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: \"fas fa-chevron-circle-left\"\n    }),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"strong\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"SE-EDU\")\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/guides/index.html\",\n    class: \"nav-link\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"span\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Home\")\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/guides/about.html\",\n    class: \"nav-link\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"span\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"About\")\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://github.com/se-edu/guides\",\n    class: \"nav-link\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"span\", null, [\n      /*#__PURE__*/_createElementVNode(\"span\", {\n        \"aria-hidden\": \"true\",\n        class: \"fab fa-github\"\n      })\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_6 = { class: \"nav-link\" }\nconst _hoisted_7 = { class: \"navbar-form\" }\nconst _hoisted_8 = { id: \"flex-body\" }\nconst _hoisted_9 = {\n  id: \"content-wrapper\",\n  class: \"fixed-header-padding\"\n}\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h1\", { id: \"guides-for-se-student-projects\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"text-dark\" }, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Guides for SE student projects Â»\")\n    ])\n  ]),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"fa fa-anchor\",\n    href: \"#guides-for-se-student-projects\",\n    onclick: \"event.stopPropagation()\"\n  })\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h1\", { id: \"working-with-git\" }, [\n  /*#__PURE__*/_createTextVNode(\"Working with Git\"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"fa fa-anchor\",\n    href: \"#working-with-git\",\n    onclick: \"event.stopPropagation()\"\n  })\n], -1 /* HOISTED */)\nconst _hoisted_12 = { id: \"section-organizing-commits\" }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"h2\", { id: \"organizing-commits\" }, [\n  /*#__PURE__*/_createTextVNode(\"Organizing commits\"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"fa fa-anchor\",\n    href: \"#organizing-commits\",\n    onclick: \"event.stopPropagation()\"\n  })\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\"Commits in a branch or a PR is said to be \"),\n  /*#__PURE__*/_createElementVNode(\"em\", null, \"well-organized\"),\n  /*#__PURE__*/_createTextVNode(\" if they have the following qualities:\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/_createStaticVNode(\"<li><p><strong>Each commit contains a single logical change, and this change must stand on its own.</strong> i.e. each commit has a single responsibility, and that responsibility must be fully carried out.<br>\\nFor example, if the commit message says <code class=\\\"hljs inline no-lang\\\">Move delete() from Person class to Address class</code>, the commit cannot contain the addition of <code class=\\\"hljs inline no-lang\\\">delete()</code> to <code class=\\\"hljs inline no-lang\\\">Address</code> class only; it should also contain the deletion of <code class=\\\"hljs inline no-lang\\\">delete()</code> from the <code class=\\\"hljs inline no-lang\\\">Person</code> class for it to be a <em>complete</em> implementation what is stated in the commit message.</p></li>\", 1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, [\n      /*#__PURE__*/_createTextVNode(\"Each commit has a \"),\n      /*#__PURE__*/_createElementVNode(\"em\", null, \"well-written\"),\n      /*#__PURE__*/_createTextVNode(\" commit message\")\n    ]),\n    /*#__PURE__*/_createTextVNode(\" i.e., it follows \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"/guides/conventions/git.html\" }, \"these guidelines\"),\n    /*#__PURE__*/_createTextVNode(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Commits are ordered in a bottom-up fashion\"),\n  /*#__PURE__*/_createTextVNode(\", each commit building on top of the previous one towards the end goal of the PR.\")\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Rationale: Reviewers should be able to review one commit at a time.\", -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Ideally, a commit does not modify more than 100 lines of code.\")\n], -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Rationale: Bigger commits are harder to review.\", -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", {\n    \"aria-hidden\": \"true\",\n    class: \"fas fa-quote-left\"\n  }),\n  /*#__PURE__*/_createTextVNode(\" \\\"Ask a programmer to review 10 lines of code, he'll find 10 issues. Ask him to do 500 lines and he'll say it\\nlooks good.\\\" --[\"),\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://twitter.com/girayozil/status/306836785739210752\" }, \"source\"),\n  /*#__PURE__*/_createTextVNode(\"]\")\n], -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\"Commits containing \"),\n  /*#__PURE__*/_createElementVNode(\"em\", null, [\n    /*#__PURE__*/_createElementVNode(\"em\", null, \"mechanical changes\")\n  ]),\n  /*#__PURE__*/_createTextVNode(\" (e.g. automated refactorings, cut-paste type code movements, file renames, etc.),\")\n], -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"ul\", null, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, [\n    /*#__PURE__*/_createTextVNode(\"should include only one \"),\n    /*#__PURE__*/_createElementVNode(\"em\", null, \"mechanical change\"),\n    /*#__PURE__*/_createTextVNode(\"  per commit e.g., rename a single variable across the code base.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"should not contain other non-mechanical changes, unless unavoidable.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"can exceed 100 LoC.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"should have the description of the change in the commit message (so that the results can be reproduced).\")\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Every commit pass CI.\"),\n  /*#__PURE__*/_createTextVNode(\" when you merge a series of commits (without squashing), every commit in your push (not just the last commit) should pass CI.\")\n], -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\"Rationale: Build-breaking commits in the version history hinder the ability to use \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"git bisect\"),\n  /*#__PURE__*/_createTextVNode(\" for locating bugs.\")\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/se-edu/addressbook-level4/pull/237\" }, \"Here\"),\n  /*#__PURE__*/_createTextVNode(\" is an example PR of commits that are organized as described above.\")\n], -1 /* HOISTED */)\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Refactor commits before pushing.\"),\n  /*#__PURE__*/_createTextVNode(\" It is unlikely that you can produce a series of commits that meet all the above criteria in the first try. In such cases, refactor commits until they meet the criteria. \"),\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"http://stackoverflow.com/a/1186549\" }, \"This S/O post\"),\n  /*#__PURE__*/_createTextVNode(\" describes how to refactor commits (even easier to do with visual tools such as SourceTree -- see \"),\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://www.youtube.com/watch?v=mBCJCuU3p7I\" }, \"this video\"),\n  /*#__PURE__*/_createTextVNode(\").\")\n], -1 /* HOISTED */)\nconst _hoisted_28 = { id: \"section-merging-branches\" }\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"h2\", { id: \"merging-branches\" }, [\n  /*#__PURE__*/_createTextVNode(\"Merging branches\"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"fa fa-anchor\",\n    href: \"#merging-branches\",\n    onclick: \"event.stopPropagation()\"\n  })\n], -1 /* HOISTED */)\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"p\", null, \"When merging branch, the aim is to keep the version history neat so that it is easy to do things such as the following:\", -1 /* HOISTED */)\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"ul\", null, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, [\n    /*#__PURE__*/_createTextVNode(\"Find which commit introduced a bug using \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"git bisect\"),\n    /*#__PURE__*/_createTextVNode(\".\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Undo a specific change by reverting a commit in the history without breaking anything else.\")\n], -1 /* HOISTED */)\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"ul\", null, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, [\n      /*#__PURE__*/_createTextVNode(\"The default strategy is to do a \"),\n      /*#__PURE__*/_createElementVNode(\"em\", null, \"squash-merge\"),\n      /*#__PURE__*/_createTextVNode(\".\")\n    ]),\n    /*#__PURE__*/_createTextVNode(\" This is suitable when the branch tackles one task but multiple commits that are not well-organized (as per the definition of 'well-organized' in the panel below).\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_33 = { class: \"indented-level1\" }\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", null, [\n    /*#__PURE__*/_createElementVNode(\"span\", {\n      \"aria-hidden\": \"true\",\n      class: \"glyphicon glyphicon-log-in\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(\" Guidelines Â» Working with git Â» \"),\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Organizing commits\")\n], -1 /* HOISTED */)\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"h2\", { id: \"organizing-commits-2\" }, [\n  /*#__PURE__*/_createTextVNode(\"Organizing commits\"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"fa fa-anchor\",\n    href: \"#organizing-commits-2\",\n    onclick: \"event.stopPropagation()\"\n  })\n], -1 /* HOISTED */)\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\"Commits in a branch or a PR is said to be \"),\n  /*#__PURE__*/_createElementVNode(\"em\", null, \"well-organized\"),\n  /*#__PURE__*/_createTextVNode(\" if they have the following qualities:\")\n], -1 /* HOISTED */)\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Each commit contains a single logical change, and this change must stand on its own.\"),\n    /*#__PURE__*/_createTextVNode(\" i.e. each commit has a single responsibility, and that responsibility must be fully carried out.\"),\n    /*#__PURE__*/_createElementVNode(\"br\"),\n    /*#__PURE__*/_createTextVNode(\"\\nFor example, if the commit message says \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Move delete() from Person class to Address class\"),\n    /*#__PURE__*/_createTextVNode(\", the commit cannot contain the addition of \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"delete()\"),\n    /*#__PURE__*/_createTextVNode(\" to \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Address\"),\n    /*#__PURE__*/_createTextVNode(\" class only; it should also contain the deletion of \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"delete()\"),\n    /*#__PURE__*/_createTextVNode(\" from the \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Person\"),\n    /*#__PURE__*/_createTextVNode(\" class for it to be a \"),\n    /*#__PURE__*/_createElementVNode(\"em\", null, \"complete\"),\n    /*#__PURE__*/_createTextVNode(\" implementation what is stated in the commit message.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, [\n      /*#__PURE__*/_createTextVNode(\"Each commit has a \"),\n      /*#__PURE__*/_createElementVNode(\"em\", null, \"well-written\"),\n      /*#__PURE__*/_createTextVNode(\" commit message\")\n    ]),\n    /*#__PURE__*/_createTextVNode(\" i.e., it follows \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"/guides/conventions/git.html\" }, \"these guidelines\"),\n    /*#__PURE__*/_createTextVNode(\".\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_39 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Commits are ordered in a bottom-up fashion\"),\n  /*#__PURE__*/_createTextVNode(\", each commit building on top of the previous one towards the end goal of the PR.\")\n], -1 /* HOISTED */)\nconst _hoisted_40 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Rationale: Reviewers should be able to review one commit at a time.\", -1 /* HOISTED */)\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Ideally, a commit does not modify more than 100 lines of code.\")\n], -1 /* HOISTED */)\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Rationale: Bigger commits are harder to review.\", -1 /* HOISTED */)\nconst _hoisted_43 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"span\", {\n    \"aria-hidden\": \"true\",\n    class: \"fas fa-quote-left\"\n  }),\n  /*#__PURE__*/_createTextVNode(\" \\\"Ask a programmer to review 10 lines of code, he'll find 10 issues. Ask him to do 500 lines and he'll say it\\nlooks good.\\\" --[\"),\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://twitter.com/girayozil/status/306836785739210752\" }, \"source\"),\n  /*#__PURE__*/_createTextVNode(\"]\")\n], -1 /* HOISTED */)\nconst _hoisted_44 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\"Commits containing \"),\n  /*#__PURE__*/_createElementVNode(\"em\", null, [\n    /*#__PURE__*/_createElementVNode(\"em\", null, \"mechanical changes\")\n  ]),\n  /*#__PURE__*/_createTextVNode(\" (e.g. automated refactorings, cut-paste type code movements, file renames, etc.),\")\n], -1 /* HOISTED */)\nconst _hoisted_45 = /*#__PURE__*/_createElementVNode(\"ul\", null, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, [\n    /*#__PURE__*/_createTextVNode(\"should include only one \"),\n    /*#__PURE__*/_createElementVNode(\"em\", null, \"mechanical change\"),\n    /*#__PURE__*/_createTextVNode(\"  per commit e.g., rename a single variable across the code base.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"should not contain other non-mechanical changes, unless unavoidable.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"can exceed 100 LoC.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"should have the description of the change in the commit message (so that the results can be reproduced).\")\n], -1 /* HOISTED */)\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Every commit pass CI.\"),\n  /*#__PURE__*/_createTextVNode(\" when you merge a series of commits (without squashing), every commit in your push (not just the last commit) should pass CI.\")\n], -1 /* HOISTED */)\nconst _hoisted_47 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\"Rationale: Build-breaking commits in the version history hinder the ability to use \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"git bisect\"),\n  /*#__PURE__*/_createTextVNode(\" for locating bugs.\")\n], -1 /* HOISTED */)\nconst _hoisted_48 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/se-edu/addressbook-level4/pull/237\" }, \"Here\"),\n  /*#__PURE__*/_createTextVNode(\" is an example PR of commits that are organized as described above.\")\n], -1 /* HOISTED */)\nconst _hoisted_49 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"Refactor commits before pushing.\"),\n  /*#__PURE__*/_createTextVNode(\" It is unlikely that you can produce a series of commits that meet all the above criteria in the first try. In such cases, refactor commits until they meet the criteria. \"),\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"http://stackoverflow.com/a/1186549\" }, \"This S/O post\"),\n  /*#__PURE__*/_createTextVNode(\" describes how to refactor commits (even easier to do with visual tools such as SourceTree -- see \"),\n  /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://www.youtube.com/watch?v=mBCJCuU3p7I\" }, \"this video\"),\n  /*#__PURE__*/_createTextVNode(\").\")\n], -1 /* HOISTED */)\nconst _hoisted_50 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */)\nconst _hoisted_51 = /*#__PURE__*/_createStaticVNode(\"<ul><li><p><strong>Use a <em>merge commit</em></strong> if the commits are well-organized, and the branch tackles only one task. In this case the commit message of the merge commit should explain the full task.</p></li> <li><p><strong>Use a <em>rebase-merge</em></strong> if the commits are well-organized and each commit is an independent task (as opposed to steps or a bigger tasks).</p></li> <li><p><strong>In other cases</strong>, consider reorganizing/splitting the branch to match one of the above.\\n</p></li></ul>\", 1)\nconst _hoisted_52 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */)\nconst _hoisted_53 = { class: \"nav-component slim-scroll\" }\nconst _hoisted_54 = /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"nav-link py-1\",\n  href: \"#working-with-git\"\n}, \"Working with Gitâ\", -1 /* HOISTED */)\nconst _hoisted_55 = /*#__PURE__*/_createElementVNode(\"nav\", { class: \"nav nav-pills flex-column my-0 nested no-flex-wrap\" }, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"nav-link py-1\",\n    href: \"#organizing-commits\"\n  }, \"Organizing commitsâ\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"nav-link py-1\",\n    href: \"#merging-branches\"\n  }, \"Merging branchesâ\")\n], -1 /* HOISTED */)\nconst _hoisted_56 = /*#__PURE__*/_createElementVNode(\"footer\", null, [\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"text-center\" }, [\n    /*#__PURE__*/_createElementVNode(\"small\", null, [\n      /*#__PURE__*/_createTextVNode(\"[Powered by \"),\n      /*#__PURE__*/_createElementVNode(\"img\", {\n        src: \"https://markbind.org/favicon.ico\",\n        width: \"30\"\n      }),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://markbind.org/\" }, \"MarkBind 6.0.2\"),\n      /*#__PURE__*/_createTextVNode(\" on Fri, 25 Jul 2025, 17:00:41 GMT+8]\")\n    ])\n  ])\n], -1 /* HOISTED */)\n\nreturn function render(_ctx, _cache) {\n  const _component_searchbar = _resolveComponent(\"searchbar\")\n  const _component_navbar = _resolveComponent(\"navbar\")\n  const _component_box = _resolveComponent(\"box\")\n  const _component_panel = _resolveComponent(\"panel\")\n  const _component_overlay_source = _resolveComponent(\"overlay-source\")\n  const _component_scroll_top_button = _resolveComponent(\"scroll-top-button\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"header\", _hoisted_1, [\n      _createVNode(_component_navbar, { type: \"dark\" }, {\n        brand: _withCtx(() => [\n          _hoisted_2\n        ]),\n        right: _withCtx(() => [\n          _createElementVNode(\"li\", _hoisted_6, [\n            _createElementVNode(\"form\", _hoisted_7, [\n              _createVNode(_component_searchbar, {\n                data: _ctx.searchData,\n                placeholder: \"Search this site\",\n                \"on-hit\": _ctx.searchCallback,\n                \"menu-align-right\": \"\"\n              }, null, 8 /* PROPS */, [\"data\", \"on-hit\"])\n            ])\n          ])\n        ]),\n        default: _withCtx(() => [\n          _createTextVNode(),\n          _hoisted_3,\n          _createTextVNode(),\n          _hoisted_4,\n          _createTextVNode(),\n          _hoisted_5,\n          _createTextVNode()\n        ]),\n        _: 1 /* STABLE */\n      })\n    ]),\n    _createTextVNode(),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"div\", _hoisted_9, [\n        _hoisted_10,\n        _createTextVNode(),\n        _createElementVNode(\"p\", null, [\n          _hoisted_11,\n          _createTextVNode(),\n          _createElementVNode(\"span\", _hoisted_12, [\n            _hoisted_13,\n            _createTextVNode(),\n            _hoisted_14,\n            _createTextVNode(),\n            _createElementVNode(\"ul\", null, [\n              _hoisted_15,\n              _createTextVNode(),\n              _hoisted_16,\n              _createTextVNode(),\n              _createElementVNode(\"li\", null, [\n                _hoisted_17,\n                _createTextVNode(),\n                _createVNode(_component_box, {\n                  type: \"info\",\n                  seamless: \"\"\n                }, {\n                  default: _withCtx(() => [\n                    _hoisted_18\n                  ]),\n                  _: 1 /* STABLE */\n                })\n              ]),\n              _createTextVNode(),\n              _createElementVNode(\"li\", null, [\n                _hoisted_19,\n                _createTextVNode(),\n                _createVNode(_component_box, {\n                  type: \"info\",\n                  seamless: \"\"\n                }, {\n                  default: _withCtx(() => [\n                    _hoisted_20,\n                    _createTextVNode(),\n                    _hoisted_21\n                  ]),\n                  _: 1 /* STABLE */\n                }),\n                _createTextVNode(),\n                _hoisted_22,\n                _createTextVNode(),\n                _hoisted_23\n              ]),\n              _createTextVNode(),\n              _createElementVNode(\"li\", null, [\n                _hoisted_24,\n                _createTextVNode(),\n                _createVNode(_component_box, {\n                  type: \"info\",\n                  seamless: \"\"\n                }, {\n                  default: _withCtx(() => [\n                    _hoisted_25\n                  ]),\n                  _: 1 /* STABLE */\n                })\n              ])\n            ]),\n            _createTextVNode(),\n            _createVNode(_component_box, { type: \"info\" }, {\n              default: _withCtx(() => [\n                _hoisted_26\n              ]),\n              _: 1 /* STABLE */\n            }),\n            _createTextVNode(),\n            _hoisted_27\n          ]),\n          _createTextVNode(),\n          _createElementVNode(\"span\", _hoisted_28, [\n            _hoisted_29,\n            _createTextVNode(),\n            _createVNode(_component_box, {\n              type: \"info\",\n              seamless: \"\"\n            }, {\n              default: _withCtx(() => [\n                _hoisted_30,\n                _createTextVNode(),\n                _hoisted_31\n              ]),\n              _: 1 /* STABLE */\n            }),\n            _createTextVNode(),\n            _hoisted_32,\n            _createTextVNode(),\n            _createElementVNode(\"div\", _hoisted_33, [\n              _createVNode(_component_panel, { minimized: \"\" }, {\n                header: _withCtx(() => [\n                  _hoisted_34\n                ]),\n                default: _withCtx(() => [\n                  _createTextVNode(),\n                  _createElementVNode(\"div\", null, [\n                    _hoisted_35,\n                    _createTextVNode(),\n                    _hoisted_36,\n                    _createTextVNode(),\n                    _createElementVNode(\"ul\", null, [\n                      _hoisted_37,\n                      _createTextVNode(),\n                      _hoisted_38,\n                      _createTextVNode(),\n                      _createElementVNode(\"li\", null, [\n                        _hoisted_39,\n                        _createTextVNode(),\n                        _createVNode(_component_box, {\n                          type: \"info\",\n                          seamless: \"\"\n                        }, {\n                          default: _withCtx(() => [\n                            _hoisted_40\n                          ]),\n                          _: 1 /* STABLE */\n                        })\n                      ]),\n                      _createTextVNode(),\n                      _createElementVNode(\"li\", null, [\n                        _hoisted_41,\n                        _createTextVNode(),\n                        _createVNode(_component_box, {\n                          type: \"info\",\n                          seamless: \"\"\n                        }, {\n                          default: _withCtx(() => [\n                            _hoisted_42,\n                            _createTextVNode(),\n                            _hoisted_43\n                          ]),\n                          _: 1 /* STABLE */\n                        }),\n                        _createTextVNode(),\n                        _hoisted_44,\n                        _createTextVNode(),\n                        _hoisted_45\n                      ]),\n                      _createTextVNode(),\n                      _createElementVNode(\"li\", null, [\n                        _hoisted_46,\n                        _createTextVNode(),\n                        _createVNode(_component_box, {\n                          type: \"info\",\n                          seamless: \"\"\n                        }, {\n                          default: _withCtx(() => [\n                            _hoisted_47\n                          ]),\n                          _: 1 /* STABLE */\n                        })\n                      ])\n                    ]),\n                    _createTextVNode(),\n                    _createVNode(_component_box, { type: \"info\" }, {\n                      default: _withCtx(() => [\n                        _hoisted_48\n                      ]),\n                      _: 1 /* STABLE */\n                    }),\n                    _createTextVNode(),\n                    _hoisted_49\n                  ])\n                ]),\n                _: 1 /* STABLE */\n              })\n            ]),\n            _createTextVNode(),\n            _hoisted_50,\n            _createTextVNode(),\n            _hoisted_51\n          ]),\n          _hoisted_52\n        ])\n      ]),\n      _createTextVNode(),\n      _createVNode(_component_overlay_source, {\n        id: \"page-nav\",\n        class: \"fixed-header-padding\",\n        \"tag-name\": \"nav\",\n        to: \"page-nav\"\n      }, {\n        default: _withCtx(() => [\n          _createElementVNode(\"div\", _hoisted_53, [\n            _createVNode(_component_overlay_source, {\n              id: \"mb-page-nav\",\n              \"tag-name\": \"nav\",\n              to: \"mb-page-nav\",\n              class: \"nav nav-pills flex-column my-0 small no-flex-wrap\"\n            }, {\n              default: _withCtx(() => [\n                _hoisted_54,\n                _createTextVNode(),\n                _hoisted_55\n              ]),\n              _: 1 /* STABLE */\n            })\n          ])\n        ]),\n        _: 1 /* STABLE */\n      }),\n      _createTextVNode(),\n      _createVNode(_component_scroll_top_button)\n    ]),\n    _createTextVNode(),\n    _hoisted_56\n  ], 64 /* STABLE_FRAGMENT */))\n}");
    var render = renderFn();
  